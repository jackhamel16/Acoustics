const gauss7points = [3.33333333333333314829616256247391e-01 3.33333333333333314829616256247391e-01 3.33333333333333314829616256247391e-01;
                      0.00000000000000000000000000000000e+00 0.00000000000000000000000000000000e+00 1.00000000000000000000000000000000e+00;
                      0.00000000000000000000000000000000e+00 1.00000000000000000000000000000000e+00 0.00000000000000000000000000000000e+00;
                      1.00000000000000000000000000000000e+00 0.00000000000000000000000000000000e+00 0.00000000000000000000000000000000e+00;
                      5.00000000000000000000000000000000e-01 5.00000000000000000000000000000000e-01 0.00000000000000000000000000000000e+00;
                      5.00000000000000000000000000000000e-01 0.00000000000000000000000000000000e+00 5.00000000000000000000000000000000e-01;
                      0.00000000000000000000000000000000e+00 5.00000000000000000000000000000000e-01 5.00000000000000000000000000000000e-01]
const gauss7weights = [4.50000000000000011102230246251565e-01
                       5.00000000000000027755575615628914e-02
                       5.00000000000000027755575615628914e-02
                       5.00000000000000027755575615628914e-02
                       1.33333333333333331482961625624739e-01
                       1.33333333333333331482961625624739e-01
                       1.33333333333333331482961625624739e-01]

function gaussQuadrature(func::Function, points::Array{Float64, 2}, weights::Array{Float64, 1})::Float64
    num_points = length(weights)
    quadrature_sum = 0
    for sum_idx in 1:num_points
        x, y, z = points[sum_idx,:]
        quadrature_sum += weights[sum_idx] * func(x, y, z)
    end
    quadrature_sum
end
